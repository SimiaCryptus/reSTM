# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET     /                           controllers.HomeController.index

GET     /peer                       controllers.ClusterController.listPeers()
POST    /peer/*id                   controllers.ClusterController.addPeer(id: String)
DELETE  /peer/*id                   controllers.ClusterController.delPeer(id: String)

PUT     /mem                        controllers.RestmController.newValue(time: String)
GET     /mem/*id                    controllers.RestmController.getValue(id: String, time: Option[String], ifModifiedSince: Option[String])
POST    /mem/*id                    controllers.RestmController.lockValue(id: String, time: String)
PUT     /mem/*id                    controllers.RestmController.writeValue(id: String, time: String)
DELETE  /mem/*id                    controllers.RestmController.delValue(id: String, time: String)

GET     /txn                        controllers.RestmController.newTxn(priority: Int = 0)
GET     /txn/*time                  controllers.RestmController.getTxn(time:String)
POST    /txn/*time                  controllers.RestmController.commit(time:String)
DELETE  /txn/*time                  controllers.RestmController.reset(time:String)

PUT     /_mem/init/*id              controllers.RestmController._init(id:String, time:String)
GET     /_mem/get/*id               controllers.RestmController._getValue(id: String, time: Option[String], ifModifiedSince: Option[String])
POST    /_mem/lock/*id              controllers.RestmController._lock(id:String, time:String)
POST    /_mem/reset/*id             controllers.RestmController._resetValue(id:String, time:String)
POST    /_mem/commit/*id            controllers.RestmController._commitValue(id:String, time:String)

POST    /_txn/addLock/*time         controllers.RestmController._addLock(id:String, time:String)
POST    /_txn/reset/*time           controllers.RestmController._reset(time:String)
POST    /_txn/commit/*time          controllers.RestmController._commit(time:String)

GET    /task/result/*id             controllers.ExecutionController.taskResult(id:String)
GET    /task/info/*id               controllers.ExecutionController.taskInfo(id:String)

GET    /demo/sort                   controllers.DemoController.demoSort(n:Int = 100)

GET    /sys/init                    controllers.SystemController.init()
GET    /sys/shutdown                controllers.SystemController.shutdown()
GET    /sys/threads                 controllers.SystemController.threadDump()
GET    /sys/metrics                 controllers.SystemController.metrics()
GET    /sys/about                   controllers.SystemController.about()

GET    /sys/logs/                   controllers.SystemController.listLogs()
GET    /sys/logs/*name              controllers.SystemController.listLog(name:String, search:Option[String])

